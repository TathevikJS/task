{"ast":null,"code":"var _jsxFileName = \"/Users/poghosbarseghyan/Desktop/task/src/components/_ListItems/CreateOrEditItem/InputField/index.tsx\";\nimport React from 'react';\nimport '../styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputField = ({\n  label,\n  id,\n  name,\n  value,\n  onChange,\n  error,\n  type = 'text'\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"form-group\",\n  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n    htmlFor: id,\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this), type === 'textarea' ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: id,\n    name: name,\n    value: value,\n    onChange: onChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n    type: type,\n    id: id,\n    name: name,\n    value: value,\n    onChange: onChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 15\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 3\n}, this);\n_c = InputField;\nexport default InputField;\nvar _c;\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","InputField","label","id","name","value","onChange","error","type","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/poghosbarseghyan/Desktop/task/src/components/_ListItems/CreateOrEditItem/InputField/index.tsx"],"sourcesContent":["import React from 'react';\nimport '../styles.scss';\n\ninterface InputFieldProps {\n  label: string;\n  id: string;\n  name: string;\n  value: string | number;\n  onChange: (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => void;\n  error?: string;\n  type?: string;\n}\n\nconst InputField: React.FC<InputFieldProps> = ({ label, id, name, value, onChange, error, type = 'text' }) => (\n  <div className=\"form-group\">\n    <label htmlFor={id}>{label}</label>\n    {type === 'textarea' ? (\n      <textarea id={id} name={name} value={value} onChange={onChange}></textarea>\n    ) : (\n      <input type={type} id={id} name={name} value={value} onChange={onChange} />\n    )}\n    {error && <span className=\"error\">{error}</span>}\n  </div>\n);\n\nexport default InputField;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYxB,MAAMC,UAAqC,GAAGA,CAAC;EAAEC,KAAK;EAAEC,EAAE;EAAEC,IAAI;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,KAAK;EAAEC,IAAI,GAAG;AAAO,CAAC,kBACvGR,OAAA;EAAKS,SAAS,EAAC,YAAY;EAAAC,QAAA,gBACzBV,OAAA;IAAOW,OAAO,EAAER,EAAG;IAAAO,QAAA,EAAER;EAAK;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC,EAClCP,IAAI,KAAK,UAAU,gBAClBR,OAAA;IAAUG,EAAE,EAAEA,EAAG;IAACC,IAAI,EAAEA,IAAK;IAACC,KAAK,EAAEA,KAAM;IAACC,QAAQ,EAAEA;EAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAW,CAAC,gBAE3Ef,OAAA;IAAOQ,IAAI,EAAEA,IAAK;IAACL,EAAE,EAAEA,EAAG;IAACC,IAAI,EAAEA,IAAK;IAACC,KAAK,EAAEA,KAAM;IAACC,QAAQ,EAAEA;EAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAC3E,EACAR,KAAK,iBAAIP,OAAA;IAAMS,SAAS,EAAC,OAAO;IAAAC,QAAA,EAAEH;EAAK;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAC7C,CACN;AAACC,EAAA,GAVIf,UAAqC;AAY3C,eAAeA,UAAU;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}